#
# This file is automatically generated. Do not edit.
# Instruction: vadd.vi

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

.align  6;
.globl v_zicclsm_test;
v_zicclsm_test:
# Zero all vector registers
vsetvli t0, x0, e32, m1, tu,mu
vmv.v.i v0, 0x0
vmv.v.i v12, 0x0

# misaligned addr and Move a0 to test data area.
la a0, testdata
li a5, 1
add a0, a0, a5

# store addr
la a7, my_global_var;
sw a0, (a7)
  TEST_CASE(1, t0, 0, li t0, 0; andi t0, a7, 3)

# Load data into v0 register group. v0 store misalign addr
li t0, -1
vsetvli t1, t0, e32,m1,tu,mu
vle32.v v0, (a0)

# Move a0 to test data area.
la a0, testdata
li a5, 8
add a0, a0, a5

# Load data into v12 register group.
li t0, -1
vsetvli t1, t0, e32,m1,tu,mu
vle8.v v12, (a0)

# -------------- TEST BEGIN -----------V12 want set 1---
li t0, 0
vsetvli t1, t0, e32,m1,tu,mu
vadd.vi v12, v0, 1
fence
# -------------- TEST END   --------------

# Store v12 register group into result data area.   want set 1 to resultdata
li t0, -1
la a0, resultdata
vsetvli t1, t0, e32,m1,tu,mu
vse32.v v12, (a0)
fence

  TEST_CASE(2, t0, 2, ld t0, 0(a0); addi a0, a0, 0)

TEST_PASSFAIL
RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

# Reserve space for test data.
resultdata:
  .zero 128

.globl my_global_var 
my_global_var:
    .quad 0   

testdata:
  .quad 0x1111
  .quad 0x2
  .quad 0x3
  .quad 0x4
  .quad 0x5

RVTEST_DATA_END